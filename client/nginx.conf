# nginx.conf - Nginx Configuration for React Frontend
#
# This configuration file sets up Nginx to serve the React frontend
# and proxy API requests to the backend server. It includes both
# development and production (HTTPS) configurations.
#
# Features:
# - Static file serving for React SPA
# - API request proxying to backend
# - SPA routing support (HTML5 History API)
# - WebSocket support
# - Production-ready HTTPS configuration (commented)
#
# Ports:
# - 80: HTTP (development)
# - 443: HTTPS (production, commented)
#
# Locations:
# - /: Serves React application
# - /api/: Proxies requests to backend

events {
    # Maximum number of simultaneous connections
    worker_connections 1024;
}

http {
    # Include MIME types and set default type
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Development Server Configuration
    server {
        listen 80;
        listen [::]:80;
        
        # Serve React application
        # Supports client-side routing with HTML5 History API
        location / {
            root   /usr/share/nginx/html;
            index  index.html index.htm;
            try_files $uri $uri/ /index.html;  # For React Router
        }

        # Proxy API requests to the backend server
        # Strips /api/ prefix when forwarding
        location /api/ {
            proxy_pass http://server:3000/;  # Remove /api/ prefix
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;  # WebSocket support
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }
    }

    # Production HTTPS Server Configuration
    # Uncomment and configure for production deployment
    # server {
    #     listen 443 ssl;
    #     server_name your-domain.com;
    #
    #     # SSL Configuration
    #     ssl_certificate /etc/nginx/certs/fullchain.pem;
    #     ssl_certificate_key /etc/nginx/certs/privkey.pem;
    #     ssl_protocols TLSv1.2 TLSv1.3;  # Modern SSL protocols
    #
    #     # Serve React application (same as development)
    #     location / {
    #         root   /usr/share/nginx/html;
    #         index  index.html index.htm;
    #         try_files $uri $uri/ /index.html;
    #     }
    #
    #     # Proxy API requests (same as development but with HTTPS)
    #     location /api/ {
    #         proxy_pass https://server:3000/;
    #         proxy_http_version 1.1;
    #         proxy_set_header Upgrade $http_upgrade;
    #         proxy_set_header Connection 'upgrade';
    #         proxy_set_header Host $host;
    #         proxy_cache_bypass $http_upgrade;
    #     }
    # }
} 